if (index < 50)
{
if (current == 'æ')
buffer[index] = 0x1B;
else if (current == 'ø')
buffer[index] = 0x1C;
else if (current == 'å')
buffer[index] = 0x1D;
else if (current == 'Æ')
buffer[index] = 0x5B;
else if (current == 'Ø')
buffer[index] = 0x5C;
else if (current == 'Å')
buffer[index] = 0x5D;
else if (current == 'Ä')
{
buffer[index] = 0x86;
index++;
buffer[index] = 0x41;
}
else if (current == 'ä')
{
buffer[index] = 0x86;
index++;
buffer[index] = 0x61;
}
else if (current == 'Ö')
{
buffer[index] = 0x86;
index++;
buffer[index] = 0x4F;
}
else if (current == 'ö')
{
buffer[index] = 0x86;
index++;
buffer[index] = 0x6F;
}

// different language setting?
//else if (current == 'å')
//{
//    buffer[index] = 0x8C;
//    index++;
//    buffer[index] = 0x61;
//}
//else if (current == 'Å')
//{
//    buffer[index] = 0x8C;
//    index++;
//    buffer[index] = 0x41;
//}

// ăĂ îÎ şŞ ţŢ âÂ (romanian)
else if (current == 'ă')
{
buffer[index] = 0x89;
index++;
buffer[index] = 0x61;
}
else if (current == 'Ă')
{
buffer[index] = 0x89;
index++;
buffer[index] = 0x41;
}
else if (current == 'î')
{
buffer[index] = 0x83;
index++;
buffer[index] = 0x69;
}
else if (current == 'Î')
{
buffer[index] = 0x83;
index++;
buffer[index] = 0x49;
}
else if (current == 'ş')
{
buffer[index] = 0x87;
index++;
buffer[index] = 0x73;
}
else if (current == 'Ş')
{
buffer[index] = 0x87;
index++;
buffer[index] = 0x53;
}
else if (current == 'ţ')
{
buffer[index] = 0x87;
index++;
buffer[index] = 0x74;
}
else if (current == 'Ţ')
{
buffer[index] = 0x87;
index++;
buffer[index] = 0x74;
}
else if (current == 'â')
{
buffer[index] = 0x83;
index++;
buffer[index] = 0x61;
}
else if (current == 'Â')
{
buffer[index] = 0x83;
index++;
buffer[index] = 0x41;
}
else if (current == 'è')
{
buffer[index] = 0x81;
index++;
buffer[index] = 0x65;
}
else if (current == 'é')
{
buffer[index] = 0x82;
index++;
buffer[index] = 0x65;
}
else if (current == 'É')
{
buffer[index] = 0x82;
index++;
buffer[index] = 0x45;
}
else if (current == 'È')
{
buffer[index] = 0x81;
index++;
buffer[index] = 0x45;
}
else if (i + 3 < text.Length && text.Substring(i, 3) == "<i>")
{
buffer[index] = 0x88;
skipCount = 2;
}
else if (i + 4 <= text.Length && text.Substring(i, 4) == "</i>")
{
buffer[index] = 0x98;
skipCount = 3;
}
else
{
buffer[index] = encoding.GetBytes(new[] { current })[0];
}
index++;
}
}
}